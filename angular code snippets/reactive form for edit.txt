---------rcedit.component.ts-------------

import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import {
  FormGroup,
  FormControl,
  Validators,
  FormBuilder,
} from '@angular/forms';
import { RcserviceService } from 'src/app/services/rcservice.service';
import { TenderserviceService } from 'src/app/services/tenderservice.service';
import { VhicleService } from 'src/app/services/vhicle.service';
import { DatePipe, JsonPipe } from '@angular/common';

@Component({
  selector: 'app-rcedit',
  templateUrl: './rcedit.component.html',
  styleUrls: ['./rcedit.component.css'],
})
export class RceditComponent implements OnInit {
  id!: number;
  ratecontract!: any;
  form!: FormGroup;
  tenders!: any;
  vhicles = null;
  gstList = [0, 5, 12, 18, 28];

  constructor(
    public rcservice: RcserviceService,
    public tenderservice: TenderserviceService,
    public vhicleserivce: VhicleService,
    private route: ActivatedRoute,
    private fb: FormBuilder,
    private router: Router
  ) {}

  ngOnInit(): void {
    this.id = this.route.snapshot.params['rcid'];

    this.bindRateContract();

    this.form = this.fb.group({
      rcId: ['', [Validators.required]],
      tenderid: ['', [Validators.required]],
      vtypeId: ['', [Validators.required]],
      basePrice: ['', [Validators.required]],
      gst: ['', [Validators.required]],
      finalRateWithGST: ['', [Validators.required]],
      rCstartDate: ['', [Validators.required]],
      rcEndDate: ['', [Validators.required]],
    });

    this.bindTenders();
    this.bindVhicles();

    //this.form.setValue({rcId: '1', tenderid: '12',vtypeId: '2',basePrice: '100',gst : '18',finalRateWithGST:'112',rCstartDate:'2021-11-12',rcEndDate:'2022-01-01'  });
  }

  ngAfterViewInit() {}

  get f() {
    return this.form.controls;
  }

  get rcId() {
    return this.form.get('rcId');
  }

  get tenderid() {
    return this.form.get('tenderid');
  }

  get vtypeId() {
    return this.form.get('vtypeId');
  }

  get basePrice() {
    return this.form.get('basePrice');
  }

  get gst() {
    return this.form.get('gst');
  }

  get finalRateWithGST() {
    return this.form.get('finalRateWithGST');
  }

  get rCstartDate() {
    return this.form.get('rCstartDate');
  }

  get rcEndDate() {
    return this.form.get('rcEndDate');
  }

  bindTenders() {
    this.tenderservice.getAll().subscribe((res) => {
      this.tenders = res;
    });
  }

  bindVhicles() {
    this.vhicleserivce.getAll().subscribe((res) => {
      this.vhicles = res;
    });
  }

  bindRateContract() {
    this.rcservice.find(this.id).subscribe((data: any) => {
      this.ratecontract = data;
      console.log(this.id);
      console.log(this.ratecontract);
      this.setValue();
    });
  }

  submit() {
    console.log(this.form.value);
    this.rcservice.update(this.id, this.form.value).subscribe((res: any) => {
      console.log('Post updated successfully!');
      this.router.navigateByUrl('/tc/rcindex');
    });
  }

  setValue() {
    console.log('set value');

    var datePipe = new DatePipe("en-US");
    this.form.setValue({
      rcId: this.ratecontract.rcId,
      tenderid: this.ratecontract.tenderId,
      vtypeId: this.ratecontract.vtypeId,
      basePrice: this.ratecontract.basePrice,
      gst: this.ratecontract.gst,
      finalRateWithGST: this.ratecontract.finalRateWithGST,
      rCstartDate:datePipe.transform(this.ratecontract.rCstartDate, 'yyyy-MM-dd'),
      rcEndDate: datePipe.transform(this.ratecontract.rcEndDate, 'yyyy-MM-dd'),
    });
  }
}


---------rcedit.component.html-------------

<app-navbar-admin></app-navbar-admin>

<div class="container d-flex justify-content-center">
  <div class="card border-primary mb-3 mt-5" style="width: 50%">
    <div class="card-header">
      <h2>Edit Rate Contract(RC)</h2>
      <a href="#" routerLink="/rc/rcindex" class="btn btn-primary btn-sm">Back</a>
    </div>
    <div class="card-body">
      <blockquote class="blockquote mb-0">
        <form [formGroup]="form" (ngSubmit)="submit()">
          <div class="form-group">

            <input formControlName="rcId" id="rcId" type="text" [(ngModel)]="id" value="hello" autocomplete="off"
              hidden />

            <label for="tenderid" class="form-label fw-bold">Select Tender :</label>
            <select formControlName="tenderid" class="form-select" >
              <option disabled>-Select Tender-</option>
              <option *ngFor="let tender of tenders" [value]="tender.tenderid">
                {{ tender.tendername }}
              </option>
            </select>
            <!-- error block -->
            <div *ngIf="f['tenderid'].touched && f['tenderid'].invalid" class="alert alert-danger">
              <div *ngIf="f['tenderid'].errors && f['tenderid'].errors['required']" class="small">
                Warehouse is Required.
              </div>
            </div>
          </div>

          <div class="form-group">
            <label for="vtypeId" class="form-label fw-bold">Select Vhicle :</label>
            <select formControlName="vtypeId" class="form-select" name="vtypeId">
              <option disabled>-Select Vhicle-</option>
              <option *ngFor="let vhicle of vhicles" [value]="vhicle.vtypeid">
                {{ vhicle.vtypename }}
              </option>
            </select>
            <!-- error block -->
            <div *ngIf="f['vtypeId'].touched && f['vtypeId'].invalid" class="alert alert-danger">
              <div *ngIf="f['vtypeId'].errors && f['vtypeId'].errors['required']" class="small">
                Vhicle is Required.
              </div>
            </div>
          </div>

          <div class="form-group">
            <label for="basePrice" class="form-label fw-bold">Base Price</label>
            <input formControlName="basePrice" id="basePrice" type="number" class="form-control" />
            <div *ngIf="f['basePrice'].touched && f['basePrice'].invalid" class="alert alert-danger">
              <div *ngIf="
                  f['basePrice'].errors && f['basePrice'].errors['required']
                ">
                Base Price is required.
              </div>
            </div>
          </div>

          <div class="form-group">
            <label for="gst" class="form-label fw-bold">GST</label>
            <select formControlName="gst" class="form-select" name="gst">
              <option disabled>-Select GST-</option>
              <option *ngFor="let gst of gstList" [value]="gst">
                {{ gst }}
              </option>
            </select>
            <!-- error block -->
            <div *ngIf="f['gst'].touched && f['gst'].invalid" class="alert alert-danger">
              <div *ngIf="f['gst'].errors && f['gst'].errors['required']" class="small">
                Vhicle is Required.
              </div>
            </div>
          </div>

          <div class="form-group">
            <label for="finalRateWithGST" class="form-label fw-bold">Final Rate(With GST)</label>
            <input formControlName="finalRateWithGST" id="finalRateWithGST" type="number" class="form-control" />
            <div *ngIf="f['finalRateWithGST'].touched && f['finalRateWithGST'].invalid" class="alert alert-danger">
              <div *ngIf="
                  f['finalRateWithGST'].errors && f['finalRateWithGST'].errors['required']
                ">
                Final Rate is required.
              </div>
            </div>
          </div>

          <div class="form-group">
            <label for="rCstartDate" class="form-label fw-bold">RC Start Date</label>
            <input formControlName="rCstartDate" id="rCstartDate" type="date" class="form-control" />
            <div *ngIf="f['rCstartDate'].touched && f['rCstartDate'].invalid" class="alert alert-danger">
              <div *ngIf="
                  f['rCstartDate'].errors && f['rCstartDate'].errors['required']
                ">
                Start Date is required.
              </div>
            </div>
          </div>

          <div class="form-group">
            <label for="rcEndDate" class="form-label fw-bold">RC End Date</label>
            <input formControlName="rcEndDate" id="rcEndDate" type="date" class="form-control" />
            <div *ngIf="f['rcEndDate'].touched && f['rcEndDate'].invalid" class="alert alert-danger">
              <div *ngIf="f['rcEndDate'].errors && f['rcEndDate'].errors['required']">
                End Date is required.
              </div>
            </div>
          </div>

          <button class="btn btn-primary mt-2" type="submit" [disabled]="!form.valid" >
            Submit
          </button>

        </form>
      </blockquote>
    </div>
  </div>
</div>

